buildscript {
    ext.ktor_version = '0.4.0'
    dependencies {
        classpath("org.junit.platform:junit-platform-gradle-plugin:${junitPlatformVersion}")
        classpath("se.transmode.gradle:gradle-docker:${dockerPluginVersion}")
    }
}
plugins {
    id 'java'
    id 'idea'
}
apply plugin: 'kotlin'
apply plugin: 'org.junit.platform.gradle.plugin'

repositories {
    jcenter()
    maven { url "https://dl.bintray.com/kotlin/ktor" }
    maven { url "https://dl.bintray.com/kotlin/kotlinx" }
}

sourceCompatibility = javaVersion
compileKotlin {
    kotlinOptions.jvmTarget = javaVersion
}
compileTestKotlin {
    kotlinOptions.jvmTarget = javaVersion
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlinVersion"
    compile "org.jetbrains.ktor:ktor-core:$ktor_version"
    compile "org.jetbrains.ktor:ktor-locations:$ktor_version"
    compile "org.jetbrains.ktor:ktor-html-builder:$ktor_version"
    compile "org.jetbrains.ktor:ktor-jetty:$ktor_version"

    compile('ch.qos.logback:logback-classic:1.2.1')

    compile('org.eclipse.jgit:org.eclipse.jgit:4.5.2.201704071617-r')
    compile "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.0"

    testCompile('org.mockito:mockito-core:2.8.9')
    testCompile('com.nhaarman:mockito-kotlin:1.5.0') { transitive = false }
    testCompile('info.novatec.testit:testutils-mockito:0.2')
    testCompile('org.assertj:assertj-core:3.7.0')

    testCompile("org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}")
    testCompile("org.junit.jupiter:junit-jupiter-params:${junitJupiterVersion}")

    testRuntime("org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}")
    testRuntime("org.junit.platform:junit-platform-launcher:${junitPlatformVersion}")
}

kotlin {
    experimental {
        coroutines "enable"
    }
}
